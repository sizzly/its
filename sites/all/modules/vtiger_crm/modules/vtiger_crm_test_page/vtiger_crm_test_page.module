<?php

/**
 * @file
 * Provides page for testing queries.
 */

/**
 * Implements hook_menu().
 */
function vtiger_crm_test_page_menu() {
  $items = array();
  $items['vtiger-test'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Vtiger CRM test page',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vtiger_crm_test_page_form'),
  );
  return $items;
}

/**
 * Test page form builder.
 */
function vtiger_crm_test_page_form($form, $form_state) {

  $methods = get_class_methods('VtigerCrmApi');
  $methods = drupal_map_assoc($methods);
  unset($methods['__construct']);

  $form['#ajax-class'] = drupal_html_class('vtiger_api_parameters');
  $form['#submit-ajax-class'] = drupal_html_class('vtiger-api-results');
  $form['#prefix'] = '<div class="' . $form['#ajax-class'] . '">';
  $form['#suffix'] = '</div>';

  $form['method_select'] = array(
    '#type' => 'select',
    '#title' => t('Operation name'),
    '#description' => t('Select a method to test'),
    '#options' => $methods,
    '#empty' => t('- Select an operation -'),
    '#empty_option' => t('- Select an operation -'),
    '#ajax' => array(
      'callback' => 'vtiger_crm_change_operation_ajax',
      'effect' => 'fade',
    ),
  );

  $form['parameters'] = array(
    '#type' => 'container',
    '#title' => t('Vtiger API call parameters'),
    '#tree' => TRUE,
  );

  if (!empty($form_state['values']['method_select'])) {
    // Get parameters the method accepts using Reflection API.
    $reflection = new ReflectionMethod('VtigerApi', $form_state['values']['method_select']);
    $parameters = $reflection->getParameters();
    if ($parameters) {
      foreach ($parameters as $param) {
        $param_name = $param->getName();
        $form['parameters'][$param_name] = array(
          '#type' => 'textfield',
          '#title' => ucwords($param_name),
          '#required' => TRUE,
        );
      }
    }
  }

  $form['run_call'] = array(
    '#type' => 'submit',
    '#value' => t('Run API call'),
    '#attributes' => array(
      'class' => array('btn-success'),
    ),
    '#ajax' => array(
      'callback' => 'vtiger_crm_run_query_ajax',
      'effect' => 'fade',
    ),
  );

  $form['call_results'] = array(
    '#type' => 'markup',
    '#prefix' => '<div class="' . $form['#submit-ajax-class'] . '">',
    '#suffix' => '</div>',
    '#weight' => 228,
  );

  $form['#submit'][] = 'vtiger_crm_api_submit_callback';
  return $form;
}

/**
 * AJAX Callback when select is changed.
 */
function vtiger_crm_change_operation_ajax($form, $form_state) {
  $commands = array();
  $selector = '.' . $form['#ajax-class'];
  $commands[] = ajax_command_prepend($selector, theme('status_messages'));
  $commands[] = ajax_command_html($selector, drupal_render($form));
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * AJAX Callback when run query button is pushed.
 */
function vtiger_crm_run_query_ajax($form, $form_state) {
  if (!$method_name = $form_state['values']['method_select']) {
    return FALSE;
  }
  $params = isset($form_state['values']['parameters']) ? $form_state['values']['parameters'] : '';
  $params = array_values($params);
  $arg1 = isset($params[0]) ? $params[0] : '';
  $arg2 = isset($params[1]) ? $params[1] : '';
  $vtiger_api = new VtigerCrmApi();
  $result = $vtiger_api->$method_name($arg1, $arg2);
  $markup = '<h3 style="margin-top:1em;">Response received: </h3>';
  $markup .= vtiger_crm_api_print_response_recursive($result);

  $commands = array();
  $selector = '.' . $form['#submit-ajax-class'];
  $commands[] = ajax_command_html($selector, $markup);
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Print response array recursively.
 */
function vtiger_crm_api_print_response_recursive($response) {
  $output = '';
  if (is_array($response) || is_object($response)) {
    foreach ($response as $key => $value) {
      if (is_scalar($value)) {
        $output .= "<li><b>{$key}</b>: {$value}</li>";
      }
      else {
        if (is_array($value) || is_object($value)) {
          $output .= "<li><b>{$key}</b>:" . vtiger_crm_api_print_response_recursive($value) . "</li>";
        }
      }
    }
    return '<ul>' . $output . '</ul>';
  }
  else {
    $output = t('Not array given');
    if (!empty($response)) {
      $output .= ': ' . $response;
    }
    return $output;
  }
}

/**
 * Submit callback for Quick form.
 */
function vtiger_crm_api_submit_callback($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
}

/**
 * A Query Wrapper.
 *
 * Takes method name and parameters, returns XML.
 */
function vtiger_crm_api_request($method, $params) {
  $vtiger = new vtigerApi();
  if (method_exists($vtiger, $method)) {
    $result = $vtiger->$method($params);
    return $result;
  }
  else {
    return FALSE;
  }
}
